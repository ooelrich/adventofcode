read.csv("dag2_data.txt", header = F, sep = "")
size("dag2_data.txt")
data <- read.table("dag2_data.txt", header = F, sep = "")
data <- read.csv("dag2_data.txt", header = F, sep = "")
head(data)
library(tidyr)
install.packages("tidyr")
library(tidyr)
head(data)
separate(data = data, col = "V1", sep = "-")
separate(data = data, col = "V1", sep = "-", into = c("upper", "lower"))
head(data)
data <- separate(data = data, col = "V1", sep = "-", into = c("upper", "lower"))
head(data)
gsub('.{1}$', '', data$V2)
data$V2 <- gsub('.{1}$', '', data$V2)
head(data$V2)
head(data)
length(data$V3)
data$V3[1] == "xxxx"
x in data$V3[1]
"x" in data$V3[1]
str_count(data$V3[1],"x")
isntall.packages("stringr")
install.packages("stringr")
library(stringr)
str_count(data$V3[1],"x")
head(data)
correct <- 0
for (i in seq_len(nrow(data))) {
if ((str_count(data$V3[i],"data$V2[i]") <= data$upper[i]) && (str_count(data$V3[i],"data$V2[i]") >= data$lower[i])) correct <- correct + 1
}
correct
nrow(data)
str_count(data$V3[1],"data$V2[1]") <= data$upper[1]
(str_count(data$V3[1],"data$V2[1]") <= data$upper[1]) && (str_count(data$V3[1],"data$V2[1]") >= data$lower[1])
(str_count(data$V3[1],"data$V2[1]") >= data$lower[1])
head(data)
str_count(data$V3[1],"data$V2[1]")
str_count(data$V3[1],data$V2[1])
correct <- 0
for (i in seq_len(nrow(data))) {
if ((str_count(data$V3[i],data$V2[i]) <= data$upper[i]) && (str_count(data$V3[i],data$V2[i]) >= data$lower[i])) correct <- correct + 1
}
correct
correct <- c()
for (i in seq_len(nrow(data))) {
if ((str_count(data$V3[i],data$V2[i]) <= data$upper[i]) && (str_count(data$V3[i],data$V2[i]) >= data$lower[i])) correct[i] <- 1
}
correct
View(data)
nrow(data)
(str_count(data$V3[1],data$V2[1]) <= data$upper[1]) && (str_count(data$V3[1],data$V2[1]) >= data$lower[1])
head(data)
correct <- c()
for (i in seq_len(nrow(data))) {
if ((str_count(data$V3[i],data$V2[i]) <= data$lower[i]) && (str_count(data$V3[i],data$V2[i]) >= data$upper[i])) correct[i] <- 1
}
sum(correct, nr.rm = TRUE)
sum(correct, na.rm = TRUE)
correct
length(correct)
nrow(data)
correct <- rep(NA, 1000)
for (i in seq_len(nrow(data))) {
if ((str_count(data$V3[i],data$V2[i]) <= data$lower[i]) && (str_count(data$V3[i],data$V2[i]) >= data$upper[i])) correct[i] <- 1
}
sum(correct, na.rm = TRUE)
correct
correct <- c()
correct <- c()
for (i in 1:1000) {
if ((str_count(data$V3[i],data$V2[i]) <= data$lower[i]) && (str_count(data$V3[i],data$V2[i]) >= data$upper[i])) correct[i] <- 1
}
length(correct)
data <- read.csv("02.txt", header = F, sep = "")
data <- separate(data = data, col = "V1", sep = "-", into = c("upper", "lower"))
head(data)
data$V2 <- gsub('.{1}$', '', data$V2)
head(data)
length(data$V3)
correct <- c()
for (i in 1:1000) {
if ((str_count(data$V3[i],data$V2[i]) <= data$lower[i]) && (str_count(data$V3[i],data$V2[i]) >= data$upper[i])) correct[i] <- 1
}
sum(correct, na.rm = TRUE)
correct
head(data)
data <- read.csv("dag2_data.txt", header = F, sep = "")
library(stringr)
library(tidyr)
data <- separate(data = data, col = "V1", sep = "-", into = c("lower", "upper"))
data$V2 <- gsub('.{1}$', '', data$V2)
head(data)
correct <- c()
for (i in 1:1000) {
if ((str_count(data$V3[i],data$V2[i]) <= data$upper[i]) && (str_count(data$V3[i],data$V2[i]) >= data$lower[i])) correct[i] <- 1
}
sum(correct, na.rm = TRUE)
head(data)
data$lower <- as.numeric(data$lower)
data$upper <- as.numeric(data$upper)
correct <- c()
for (i in 1:1000) {
if ((str_count(data$V3[i],data$V2[i]) <= data$upper[i]) && (str_count(data$V3[i],data$V2[i]) >= data$lower[i])) correct[i] <- 1
}
sum(correct, na.rm = TRUE)
head(data)
substr(data$V3[1], 1)
substr(data$V3[1], 1, 1)
substr(data$V3[1], 1, 1) == data$V2[1]
correct2 <- rep(0, 1000)
for (i in seq_len(1000)) {
no_correct <- as.numeric(substr(data$V3[i], data$lower[i], data$lower[i]) == data$V2[i]) +
as.numeric(substr(data$V3[i], data$upper[i], data$upper[i]) == data$V2[i])
if (no_correct == 1) correct2[i] <- 1
}
sum(correct2)
data <- read.csv("data.txt")
data <- read.csv("Day 1/data.txt")
data <- read.csv("Day 1/day1_data.txt")
for (i in seq_len(n-1)) {
for (j in (i+1):(n)) {
if (sum(data$val[c(i, j)]) == 2020) sol <- c(i, j)
}
}
n <- nrow(data)
for (i in seq_len(n-1)) {
for (j in (i+1):(n)) {
if (sum(data$val[c(i, j)]) == 2020) sol <- c(i, j)
}
}
print(paste("The product of ", sol, " is ", b))
a <- sum(data$val[sol])
b <- prod(data$val[sol])
print(paste("The product of ", sol, " is ", b))
print(paste("The product of ", data$val[sol], " is ", b))
vals <- data$val[sol]
print(paste("The product of ", vals, " is ", b))
print(paste(vals[1], " * ", vals[2], " = ", b))
data <- read.csv("Day 1/day1_data.txt")
n <- nrow(data)
# Problem 1
for (i in seq_len(n-1)) {
for (j in (i+1):(n)) {
if (sum(data$val[c(i, j)]) == 2020) sol <- c(i, j)
}
}
vals <- data$val[sol]
# sum(vals)
b <- prod(vals)
print(paste(vals[1], " * ", vals[2], " = ", b))
print(paste(vals[1], " * ", vals[2], " * ", vals[3], " = ", b))
vals <- data$val[sol]
# sum(vals)
b <- prod(vals)
print(paste(vals[1], " * ", vals[2], " * ", vals[3], " = ", b))
for (i in seq_len(n-2)) {
for (j in (i+1):(n-1)) {
for (k in (j+1):n) {
if (sum(data$val[c(i, j, k)]) == 2020) sol <- c(i, j, k)
}
}
}
vals <- data$val[sol]
# sum(vals)
b <- prod(vals)
print(paste(vals[1], " * ", vals[2], " * ", vals[3], " = ", b))
rm(list = ls())
library(stringr)
library(tidyr)
data <- read.csv("day2_data.txt", header = F, sep = "")
data <- read.csv("Day 2/day2_data.txt", header = F, sep = "")
data <- separate(data, col = "V1", sep = "-", into = c("upper", "lower"))
head(data)
data$V2 <- gsub('.{1}$', '', data$V2)
head(data)
n <- nrow(data)
correct <- c()
for (i in seq_len(n)) {
LL <- (str_count(data$V3[i], data$V2[i]) <= data$lower[i])
UL <- (str_count(data$V3[i], data$V2[i]) >= data$upper[i])
if (LL && UL) correct[i] <- 1
}
sum(correct, na.rm = TRUE)
data$upper <- as.numeric(data$upper)
data$lower <- as.numeric(data$lower)
correct <- c()
for (i in seq_len(n)) {
LL <- (str_count(data$V3[i], data$V2[i]) <= data$lower[i])
UL <- (str_count(data$V3[i], data$V2[i]) >= data$upper[i])
if (LL && UL) correct[i] <- 1
}
sum(correct, na.rm = TRUE)
correct <- rep(0, n)
for (i in seq_len(n)) {
c1 <- as.numeric(substr(data$V3[i], data$lower[i], data$lower[i]) == data$V2[i])
c2 <- as.numeric(substr(data$V3[i], data$upper[i], data$upper[i]) == data$V2[i])
no_correct <-  c1 + c2
if (no_correct == 1) correct[i] <- 1
}
sum(correct)
